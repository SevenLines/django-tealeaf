// Generated by CoffeeScript 1.7.1
(function() {
  var LabEditor, SelectStudent, TaskEditor;

  LabEditor = (function() {
    LabEditor.clear_complexity = function(lab_id) {
      return $("\#" + lab_id).removeClass();
    };

    LabEditor.create_ckEditor = function(lab_content_id) {
      var ckEditor, uploadForm;
      ckEditor = CKEDITOR.inline("" + lab_content_id);
      if (FileUploadForm) {
        uploadForm = new FileUploadForm({
          editor: ckEditor
        });
      }
      return ckEditor;
    };

    function LabEditor(lab_id, lab_content_id) {
      var ckEditor, form;
      ckEditor = LabEditor.create_ckEditor(lab_content_id);
      form = $("\#" + lab_id).find("form.lab-save")[0];
      $(form).submit(function() {
        var data, r;
        data = $(form).serializeArray();
        data.push({
          'name': 'description',
          'value': ckEditor.getData()
        });
        r = $.post(form.action, data).success(function(data) {
          return InterfaceAlerts.showSuccess();
        }).fail(function(data) {
          return InterfaceAlerts.showFail();
        });
        return false;
      });
    }

    return LabEditor;

  })();

  TaskEditor = (function() {
    TaskEditor.restore_style = function(submit) {
      submit.toggleClass("btn-warning", false);
      return submit.toggleClass("btn-success", false);
    };

    TaskEditor.clear_complexity = function(task_id) {
      return $("\#" + task_id).removeClass("easy medium hard nightmare");
    };

    TaskEditor.create_ckEditor = function(id_content) {
      var ckEditor, uploadForm;
      ckEditor = CKEDITOR.inline(id_content);
      if (FileUploadForm) {
        uploadForm = new FileUploadForm({
          editor: ckEditor
        });
      }
      return ckEditor;
    };

    function TaskEditor(task_id, id_content) {
      var ckEditor, form, select, submit;
      ckEditor = null;
      $("\#" + task_id).find(".turn-edit-on-btn").click(function() {
        $(this).hide("fast");
        $("\#" + id_content).attr("contenteditable", true);
        return ckEditor = TaskEditor.create_ckEditor(id_content);
      });
      form = $("\#" + task_id).find("form.save");
      if (form.size() === 0) {
        console.log("\#" + task_id + " form.save didn't find");
        return;
      }
      form = form[0];
      submit = $(form).find("button");
      select = $(form).find("select");
      $(form).submit(function() {
        var data, r;
        try {
          ckEditor = CKEDITOR.inline(id_content);
        } catch (_error) {}
        data = $(form).serializeArray();
        if ($(form).find("select[name='users'] option").size() === 0) {
          data.push({
            'name': 'no_users',
            'value': ''
          });
        }
        console.dir(data);
        if (ckEditor !== null) {
          data.push({
            'name': 'description',
            'value': ckEditor.getData()
          });
        }
        r = $.post(form.action, data);
        r.success(function(data) {
          var btn;
          TaskEditor.clear_complexity(task_id);
          $("#" + task_id).toggleClass(select[0].value, true);
          $("#" + task_id + " .info").html(data);
          btn = $("\#" + task_id).find(".turn-edit-on-btn");
          btn.show("fast");
          return InterfaceAlerts.showSuccess();
        });
        r.fail(function(data) {
          TaskEditor.restore_style(submit);
          return InterfaceAlerts.showFail();
        });
        return false;
      });
    }

    return TaskEditor;

  })();

  SelectStudent = (function() {
    SelectStudent.prototype.update_select = function(select_selector, val) {};

    function SelectStudent(selector_select2, students_url) {
      $(selector_select2).select2({
        placeholder: "студенты",
        multiple: true,
        minimumInputLength: 2,
        initSelection: function(element, callback) {
          var data;
          data = [];
          $(element).closest("form").find("select[name='users'] option").each(function(i, el) {
            console.log(el);
            return data.push({
              id: el.value,
              text: el.text
            });
          });
          callback(data);
        },
        ajax: {
          url: students_url,
          dataType: "json",
          data: (function(_this) {
            return function(term, page) {
              return {
                filter: term
              };
            };
          })(this),
          results: (function(_this) {
            return function(data, page) {
              return {
                results: data
              };
            };
          })(this)
        }
      }).select2('val', []).on("change", function(e) {
        var selector_hidden_select, v, _i, _len, _ref, _results;
        selector_hidden_select = $(this).closest("form").find("select[name='users']");
        $(selector_hidden_select).find("option").remove();
        _ref = e.val;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          v = _ref[_i];
          _results.push($(selector_hidden_select).append("<option val='" + v + "' selected>" + v + "</option>"));
        }
        return _results;
      });
    }

    return SelectStudent;

  })();

  window.SelectStudent = SelectStudent;

  window.TaskEditor = TaskEditor;

  window.LabEditor = LabEditor;

}).call(this);
